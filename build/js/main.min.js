(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";

var _iosVhFix = require("./utils/ios-vh-fix");
var _slide = require("./modules/slide/slide");
var _portfolio = require("./modules/swiper/portfolio");
var _anchor = require("./modules/anchor/anchor");
var _popup = require("./modules/popup/popup");
// ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------

  (0, _iosVhFix.iosVhFix)();

  // Modules
  // ---------------------------------

  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана
  window.addEventListener('load', function () {
    (0, _slide.enableSlides)();
    (0, _portfolio.initeSwiperPortfolio)();
    (0, _anchor.animateAnchors)();
    (0, _popup.onPopupButtonClick)();
  });
});

// ---------------------------------

// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.

// привязывайте js не на классы, а на дата атрибуты (data-validate)

// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅

// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.

// для адаптивного JS используется matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();

// используйте .closest(el)

},{"./modules/anchor/anchor":2,"./modules/popup/popup":3,"./modules/slide/slide":4,"./modules/swiper/portfolio":5,"./utils/ios-vh-fix":7}],2:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.animateAnchors = void 0;
// собираем все якоря; устанавливаем время анимации и количество кадров
var anchors = [].slice.call(document.querySelectorAll('a[href*="#"]'));
var ANIMATION_TIME = 1500;
var FRAMES_COUNT = 120;
var animateAnchors = exports.animateAnchors = function animateAnchors() {
  anchors.forEach(function (item) {
    // каждому якорю присваиваем обработчик события
    item.addEventListener('click', function (e) {
      // убираем стандартное поведение
      e.preventDefault();

      // для каждого якоря берем соответствующий ему элемент и определяем его координату Y
      var coordY = document.querySelector(item.getAttribute('href')).getBoundingClientRect().top + window.scrollY;

      // запускаем интервал, в котором
      var scroller = setInterval(function () {
        // считаем на сколько скроллить за 1 такт
        var scrollBy = coordY / FRAMES_COUNT;
        if (window.innerHeight + window.scrollY + scrollBy >= document.body.offsetHeight) {
          clearInterval(scroller);
        } else
          // если к-во пикселей для скролла за 1 такт больше расстояния до элемента
          // и дно страницы не достигнуто
          if (scrollBy > window.scrollY - coordY && window.innerHeight + window.scrollY < document.body.offsetHeight) {
            // то скроллим на к-во пикселей, которое соответствует одному такту
            window.scrollBy(0, scrollBy);
          } else {
            // иначе добираемся до элемента и выходим из интервала
            window.scrollTo(0, coordY);
            clearInterval(scroller);
          }
        // время интервала равняется частному от времени анимации и к-ва кадров
      }, ANIMATION_TIME / FRAMES_COUNT);
      document.body.style.overflow = 'auto';
    });
  });
};

},{}],3:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.onPopupButtonClick = void 0;
var popupButton = document.querySelector('[data-popup]');
var popupMenu = document.querySelector('[data-menu]');
var openPopup = function openPopup() {
  popupMenu.classList.toggle('is-open');
};
var onPopupButtonClick = exports.onPopupButtonClick = function onPopupButtonClick() {
  popupMenu.classList.remove('is-open');
  popupButton.addEventListener('click', openPopup);
};

},{}],4:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.enableSlides = void 0;
var slides = document.querySelectorAll('[data-slide]');
var openSlide = function openSlide(i) {
  i.classList.toggle('is-active');
};
var enableSlides = exports.enableSlides = function enableSlides() {
  slides.forEach(function (slide) {
    slide.addEventListener('click', function () {
      openSlide(slide);
    });
  });
};

},{}],5:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.initeSwiperPortfolio = void 0;
var initeSwiperPortfolio = exports.initeSwiperPortfolio = function initeSwiperPortfolio() {
  var swiperPortfolio = new Swiper('.portfolio__slider-container', {
    slidesPerView: 1,
    loop: true,
    navigation: {
      nextEl: '.portfolio__button--next',
      prevEl: '.portfolio__button--prev'
    },
    breakpoints: {
      767: {
        slidesPerView: 2,
        spaceBetween: 30
      },
      1199: {
        slidesPerView: 4,
        spaceBetween: 40
      }
    }
  });
  document.querySelector('.portfolio .swiper-slide-duplicate').onfocus = function () {
    document.querySelector('.portfolio .swiper-slide-active').focus();
  };
};

},{}],6:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosChecker = void 0;
var iosChecker = exports.iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform)
  // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

},{}],7:[function(require,module,exports){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.iosVhFix = void 0;
var _iosChecker = require("./ios-checker");
var iosVhFix = exports.iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if ((0, _iosChecker.iosChecker)()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};

},{"./ios-checker":6}]},{},[1])


//# sourceMappingURL=main.min.js.map
